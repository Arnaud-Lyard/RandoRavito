services:
  tournament-database:
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5435:5432
    volumes:
      - tournament-database:/var/lib/postgresql/data

  tournament-server:
    depends_on:
      tournament-database:
        condition: service_healthy
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://postgresql://dbuser:dbpassword@tournament/dbname?schema=public}
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${PORT:-4000}
      - POSTGRES_HOST=${POSTGRES_HOST:-tournament}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - EMAIL_USER=${EMAIL_USER:-user@user.com}
      - EMAIL_PASS=${EMAIL_PASS:-password}
      - EMAIL_HOST=${EMAIL_HOST:-host}
      - EMAIL_PORT=${EMAIL_PORT:-port}
      - JWT_ACCESS_TOKEN_PRIVATE_KEY=${JWT_ACCESS_TOKEN_PRIVATE_KEY:-private}
      - JWT_ACCESS_TOKEN_PUBLIC_KEY=${JWT_ACCESS_TOKEN_PUBLIC_KEY:-public}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN:-15}
      - FULL_CLIENT_URL=${FULL_CLIENT_URL:-url}
      - CLIENT_URL=${CLIENT_URL:-url}
      - SERVER_URL=${SERVER_URL:-url}
      - LOGTAIL_SOURCE_TOKEN=${LOGTAIL_SOURCE_TOKEN:-token}
    image: arnaudlyard/tournament-server
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/api']
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - ./uploads:/app/public/uploads

  tournament-client:
    image: arnaudlyard/tournament-client

  upload-service:
    environment:
      - HOST=/
    build: file-upload-service
    volumes:
      - tournament-uploads:/app/files

  gateway:
    depends_on:
      tournament-client:
        condition: service_started
      tournament-server:
        condition: service_healthy
    restart: always
    build:
      context: gateway
      dockerfile: Dockerfile.production
    ports:
      - ${GATEWAY_PORT-8000}:80

volumes:
  tournament-database:
  tournament-uploads:
