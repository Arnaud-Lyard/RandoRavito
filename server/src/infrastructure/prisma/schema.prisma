// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

model user {
  id           String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  firstName    String     @map("first_name") @db.VarChar(100)
  lastName     String     @map("last_name") @db.VarChar(100)
  email        String     @unique @db.VarChar(254)
  passwordHash String     @map("password_hash") @db.VarChar(60)
  token        token[]
  userRole     userRole[]
}

model token {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token     String   @unique @db.VarChar(255)
  userId    String   @map("user_id") @db.Uuid
  expiresIn DateTime @map("expires_in") @db.Timestamp(6)
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)
  user      user     @relation(onDelete: Cascade, onUpdate: Cascade, fields: [userId], references: [id])
}

model role {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String     @unique @db.VarChar(255)
  description String     @db.VarChar(255)
  userRole    userRole[]
}

model userRole {
  id     String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  userId String @map("user_id") @db.Uuid
  roleId String @map("role_id") @db.Uuid
  user   user   @relation(onDelete: Cascade, onUpdate: Cascade, fields: [userId], references: [id])
  role   role   @relation(onDelete: Cascade, onUpdate: Cascade, fields: [roleId], references: [id])
}
